/*
 * Generated By SugarKubes Apr 14 2024
 */

const Monkey = require("../../models/Monkey");
/*
 * @oas [post] /monkey
 * summary: "create a monkey"
 * tags: ["monkey"]
 * requestBody:
 *   description: Monkey - **Create** 
 *   required: true
 *   content:
 *     application/json:
 *       schema:
 *        $ref: '#/components/schemas/Monkey'
 * responses:
 *   "200":
 *     description: "create a monkey"
 *     schema:
 *       type: "Monkey"
 */
module.exports = async (req, res) => {
  try {
    const {
      name,
      alive,
      age
    } = req.body;
    const newMonkey = {};
    // Validate
    if (typeof name !== 'undefined' &&
      typeof name === "string" && name) {
      newMonkey.name = name;
    }
    if (typeof alive !== 'undefined' &&
      typeof alive === "boolean") {
      newMonkey.alive = alive;
    }
    if (typeof age !== 'undefined' &&
      typeof age === "number") {
      newMonkey.age = age;
    }
    // @TODO handle safe area. Should be idempotent.

    // maybe with @sugar-safe-start
    // @sugar-safe-end

    // save
    const created = await Monkey.create(newMonkey);
    return res.json({
      monkey: created
    });

  } catch (e) {
    console.error('Create => monkey', e);
    return res.status(500).json({
      error: e.message ? e.message : e
    });
  }
};